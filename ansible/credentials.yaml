# CREDENTIALS
# aws_access_key: and aws_access_key: --> If those are set to anything else than False
# . they will be used as the access and secret key for the AWS user.
#
# If you want to use the access and secret key set by the AWS CLI Tool
# . into ~/.aws/credentials you can set aws_access_key: and aws_access_key: to False
# To specify the profile to use (aws cli --profile option), set the
# aws_credentials_profile: to the profile name to be used
# "pip install --upgrade --user awscli" installs the AWS CLI tools
# run:
# $ aws configure
# AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE
# AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
# Default region name [None]: us-west-1
# Default output format [None]: json
#       That creates ~./aws/credentials
# run:
# $ aws configure --profile ansible
# AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE
# AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
# Default region name [None]: us-west-1
# Default output format [None]: json
#       That creates ansible section in ~/.aws/credentials

aws_access_key: False
aws_secret_key: False
aws_credentials_profile: "ansible"
user_ARN: "arn:aws:iam::<your AWS account here>:user/user"


terraform_dir: ~/code/path/to/main/
ansible_dir: ~/code/path/to/ansible/
aws_dir: ~/path/to/AWS-SSH/ #for key-pairs


